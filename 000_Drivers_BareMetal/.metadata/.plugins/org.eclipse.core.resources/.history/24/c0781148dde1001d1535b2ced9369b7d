/*
 * stm32f411xx_gpio_driver.c
 *
 *  Created on: 23-Apr-2023
 *      Author: ad
 */

#include "stm32f411xx_gpio_driver.h"

//peripheral clock setup

/******************************************************************************************************************
 * @fn				- GPIO_PeriClockControl
 *
 * @brief			-
 *
 * @param[in]		-
 * @param[in]		-
 * @param[in]		-
 *
 * @return			- none
 *
 * @note			- none
 ********************************************************************************************************************/

void GPIO_PeriClockcontrol(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
	if(EnorDi == ENABLE)
	{
		if(pGPIOx == GPIOA)
		{
			GPIO_PCLK_EN();
		}
		elseif(p)
	}
	else
	{

	}
}

//Init and De- init

/******************************************************************************************************************
 * @fn				- GPIO_PeriClockControl
 *
 * @brief			-
 *
 * @param[in]		-
 * @param[in]		-
 * @param[in]		-
 *
 * @return			- none
 *
 * @note			- none
 ********************************************************************************************************************/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{

}

void GPIO_DeInit(GPIO_RegDef_t *pGPIOx)
{

}

//Data read and write
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{

}
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx)
{

}
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{

}
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{

}
void GPIO_ToffleOutputPort(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{

}

//IRQ Configuration and ISR handling
void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t IRQPriority, uint8_t EnorDi)
{

}
void GPIO_IRQHandling(int8_t PinNumber)
{

}
